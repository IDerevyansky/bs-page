services:
  web:
    build: .
    ports:
      - 3000:3000
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=development
    command: npm run dev  
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "80:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
    

#   pgadmin:
#     image: dpage/pgadmin4
#     container_name: pgadmin
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@example.com
#       PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/db-password
#     ports:
#        - "80:80"
#     depends_on:
#       db:
#         condition: service_healthy    

#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     ports:
#       - 5432:5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt 

# 0.0.0.0:5432

# docker compose up --watch

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

